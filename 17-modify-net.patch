From 84735fa06111afcacf0aae69272ed43208d46807 Mon Sep 17 00:00:00 2001
From: Mike Banon <mikebdp2@gmail.com>
Date: Tue, 10 Dec 2019 17:12:03 +0000
Subject: [PATCH] Modify ./net/ files according to WR841N(D)v9 u-boot

---
 net/Makefile |   7 +++
 net/eth.c    |  15 +++++++
 net/net.c    | 117 +++++++++++++++++++++++++++++++++++++++++++++++++--
 net/tftp.c   |  23 +++++++++-
 4 files changed, 156 insertions(+), 6 deletions(-)

diff --git a/net/Makefile b/net/Makefile
index 0eee330cfe..cc715f6659 100644
--- a/net/Makefile
+++ b/net/Makefile
@@ -27,6 +27,12 @@ include $(TOPDIR)/config.mk
 
 LIB	= $(obj)libnet.a
 
+ifeq ($(COMPRESSED_UBOOT),1) # cu570m condition branch
+COBJS-y += net.o
+COBJS-y += tftp.o
+COBJS-y += rarp.o
+COBJS-y += eth.o
+else # old default path
 COBJS-y += net.o
 COBJS-y += tftp.o
 COBJS-y += bootp.o
@@ -34,6 +40,7 @@ COBJS-y += rarp.o
 COBJS-y += eth.o
 COBJS-y += nfs.o
 COBJS-y += sntp.o
+endif # cu570m
 
 COBJS	:= $(COBJS-y)
 SRCS	:= $(COBJS:.o=.c)
diff --git a/net/eth.c b/net/eth.c
index 16a6dcbd8c..39edba0d30 100644
--- a/net/eth.c
+++ b/net/eth.c
@@ -287,6 +287,17 @@ int eth_initialize(bd_t *bis)
 #if defined(CONFIG_AT91CAP9)
 	at91cap9_eth_initialize(bis);
 #endif
+/* cu570m start */
+#if defined(CONFIG_AR7100)
+	ag7100_enet_initialize(bis);
+#endif
+#if defined(CONFIG_AR7240)
+	ag7240_enet_initialize(bis);
+#endif
+#if defined(CONFIG_ATHEROS) && !defined(CONFIG_ATH_EMULATION)
+	ath_gmac_enet_initialize(bis);
+#endif
+/* cu570m end */
 
 	if (!eth_devices) {
 		puts ("No ethernet found.\n");
@@ -316,6 +327,7 @@ int eth_initialize(bd_t *bis)
 					tmp = (*end) ? end+1 : end;
 			}
 
+#if !defined(CONFIG_AR9100) && !defined(CONFIG_AR7240) && !defined(CONFIG_ATHEROS) /* cu570m */
 			if (memcmp(env_enetaddr, "\0\0\0\0\0\0", 6)) {
 				if (memcmp(dev->enetaddr, "\0\0\0\0\0\0", 6) &&
 				    memcmp(dev->enetaddr, env_enetaddr, 6))
@@ -336,6 +348,7 @@ int eth_initialize(bd_t *bis)
 
 				memcpy(dev->enetaddr, env_enetaddr, 6);
 			}
+#endif /* cu570m */
 
 			eth_number++;
 			dev = dev->next;
@@ -448,7 +461,9 @@ int eth_init(bd_t *bis)
 
 	old_current = eth_current;
 	do {
+#if !defined(CFG_ATHRS26_PHY) && !defined(CFG_ATHRHDR_EN) /* cu570m */
 		debug ("Trying %s\n", eth_current->name);
+#endif /* cu570m */
 
 		if (eth_current->init(eth_current,bis) >= 0) {
 			eth_current->state = ETH_STATE_ACTIVE;
diff --git a/net/net.c b/net/net.c
index 44feee2290..67c2044374 100644
--- a/net/net.c
+++ b/net/net.c
@@ -163,6 +163,12 @@ IPaddr_t	NetPingIP;		/* the ip address to ping 		*/
 static void PingStart(void);
 #endif
 
+/* cu570m start */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+extern void athr_hdr_func(void);
+#endif
+/* cu570m end */
+
 #if defined(CONFIG_CMD_CDP)
 static void CDPStart(void);
 #endif
@@ -276,6 +282,11 @@ int
 NetLoop(proto_t protocol)
 {
 	bd_t *bd = gd->bd;
+/* cu570m start */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+	static int AthrHdr_Flag = 0;
+#endif
+/* cu570m end */
 
 #ifdef CONFIG_NET_MULTI
 	NetRestarted = 0;
@@ -307,15 +318,44 @@ NetLoop(proto_t protocol)
 		NetArpWaitTxPacket -= (ulong)NetArpWaitTxPacket % PKTALIGN;
 		NetArpWaitTxPacketSize = 0;
 	}
-
+/* cu570m condition branch */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+	if(!AthrHdr_Flag) {
+		eth_halt();
+		if (eth_init(bd) < 0) {
+		eth_halt();
+			return(-1);
+		}
+		AthrHdr_Flag = 1;
+	}
+#else /* old default path */
 	eth_halt();
 #ifdef CONFIG_NET_MULTI
+/* cu570m start */
+#if defined(CFG_VITESSE_73XX_NOPHY) || defined(CFG_REH132) || defined (CONFIG_AG7240_SPEPHY)
+	/*
+	 * There is no PHY in the DNI AP83 board with vitesse switch
+	 * VSC7395XYV, so set the eth1 interface to switch ports, so
+	 * that u-boot can route all the traffic through the switch
+	 * ports.
+	 */
+	 /*
+	 * ag7240 uses eth1 as LAN and eth0 as WAN in uboot
+	 * because GE0 is MIDO server which must initialize first
+	 * modified by tiger 07/20/09
+	 */
+	setenv("ethact", "eth1");
+#else
+        setenv("ethact", "eth0");
+#endif
+/* cu570m end */
 	eth_set_current();
 #endif
 	if (eth_init(bd) < 0) {
 		eth_halt();
 		return(-1);
 	}
+#endif /* cu570m */
 
 restart:
 #ifdef CONFIG_NET_MULTI
@@ -387,9 +427,22 @@ restart:
 		NetOurVLAN = getenv_VLAN("vlan");	/* VLANs must be read */
 		NetOurNativeVLAN = getenv_VLAN("nvlan");
 		break;
+/* cu570m start */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+	case ATHRHDR:
+		athr_hdr_func();
+		break;
+#endif
+/* cu570m end */
 	default:
 		break;
 	}
+/* cu570m start */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+	if(protocol == ATHRHDR)
+		goto skip_netloop;
+#endif
+/* cu570m end */
 
 	switch (net_check_prereq (protocol)) {
 	case 1:
@@ -422,7 +475,7 @@ restart:
 			DhcpRequest();		/* Basically same as BOOTP */
 			break;
 #endif
-
+#ifndef COMPRESSED_UBOOT /* cu570m */
 		case BOOTP:
 			BootpTry = 0;
 			BootpRequest ();
@@ -432,6 +485,7 @@ restart:
 			RarpTry = 0;
 			RarpRequest ();
 			break;
+#endif /* cu570m */
 #if defined(CONFIG_CMD_PING)
 		case PING:
 			PingStart();
@@ -482,6 +536,7 @@ restart:
 	 *	Main packet reception loop.  Loop receiving packets until
 	 *	someone sets `NetState' to a state that terminates.
 	 */
+skip_netloop: /* cu570m */
 	for (;;) {
 		WATCHDOG_RESET();
 #ifdef CONFIG_SHOW_ACTIVITY
@@ -504,8 +559,13 @@ restart:
 			puts ("\nAbort\n");
 			return (-1);
 		}
-
+/* cu570m condition branch */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+                if(protocol != ATHRHDR)
+			ArpTimeoutCheck();
+#else /* old default path */
 		ArpTimeoutCheck();
+#endif /* cu570m */
 
 		/*
 		 *	Check for a timeout, and run the timeout handler
@@ -514,6 +574,7 @@ restart:
 		if (timeHandler && ((get_timer(0) - timeStart) > timeDelta)) {
 			thand_f *x;
 
+#if !defined(CFG_ATHRS26_PHY) && !defined(CFG_ATHRHDR_EN) /* cu570m */
 #if defined(CONFIG_MII) || defined(CONFIG_CMD_MII)
 #  if defined(CFG_FAULT_ECHO_LINK_DOWN) && \
       defined(CONFIG_STATUS_LED) &&	   \
@@ -528,6 +589,7 @@ restart:
 			}
 #  endif /* CFG_FAULT_ECHO_LINK_DOWN, ... */
 #endif /* CONFIG_MII, ... */
+#endif /* cu570m */
 			x = timeHandler;
 			timeHandler = (thand_f *)0;
 			(*x)();
@@ -543,6 +605,12 @@ restart:
 			goto restart;
 
 		case NETLOOP_SUCCESS:
+/* cu570m start */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+			if(protocol == ATHRHDR)
+				return 1;
+#endif
+/* cu570m end */
 			if (NetBootFileXferSize > 0) {
 				char buf[20];
 				printf("Bytes transferred = %ld (%lx hex)\n",
@@ -579,6 +647,16 @@ startAgainHandler(uchar * pkt, unsigned dest, unsigned src, unsigned len)
 
 void NetStartAgain (void)
 {
+
+/* cu570m start */
+#ifdef FW_RECOVERY
+	extern ushort fw_recovery;
+
+	if(fw_recovery != 0)
+		return;
+#endif
+/* cu570m end */
+
 	char *nretry;
 	int noretry = 0, once = 0;
 
@@ -779,7 +857,14 @@ static void PingStart(void)
 #if defined(CONFIG_NET_MULTI)
 	printf ("Using %s device\n", eth_get_name());
 #endif	/* CONFIG_NET_MULTI */
-	NetSetTimeout (10UL * CFG_HZ, PingTimeout);
+
+#ifndef TPWD_FOR_LINUX_CAL /* cu570m */
+	NetSetTimeout (10UL * CFG_HZ, PingTimeout); /* old default branch */
+#else /* cu570m condition branch */
+	/* shorten ping timeout.  by HouXB, 01Feb13 */
+	NetSetTimeout (CFG_HZ, PingTimeout);
+#endif /* cu570m */
+
 	NetSetHandler (PingHandler);
 
 	PingSend();
@@ -1149,6 +1234,11 @@ NetReceive(volatile uchar * inpkt, int len)
 	IPaddr_t tmp;
 	int	x;
 	uchar *pkt;
+/* cu570m start */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+        uint8_t type;
+#endif
+/* cu570m end */
 #if defined(CONFIG_CMD_CDP)
 	int iscdp;
 #endif
@@ -1158,6 +1248,25 @@ NetReceive(volatile uchar * inpkt, int len)
 	printf("packet received\n");
 #endif
 
+/* cu570m start */
+#if defined(CFG_ATHRS26_PHY) && defined(CFG_ATHRHDR_EN)
+	type = (inpkt[1] & 0xf);
+	/* check for ack */
+       if(type == 0x6){
+               (*packetHandler)(inpkt,0,0,0);
+		return;
+	}
+	else if (type == 0x0) {
+	   inpkt = inpkt + ATHRHDR_LEN;  /* Remove ATHRHDR */
+	   len = len - ATHRHDR_LEN;
+	}
+	else{
+		printf("Packet dropped! Type invalid.\n");
+		return;
+	}
+#endif
+/* cu570m end */
+
 	NetRxPkt = inpkt;
 	NetRxPktLen = len;
 	et = (Ethernet_t *)inpkt;
diff --git a/net/tftp.c b/net/tftp.c
index ea8fea2f7e..b5c6b788ee 100644
--- a/net/tftp.c
+++ b/net/tftp.c
@@ -15,9 +15,9 @@
 #if defined(CONFIG_CMD_NET)
 
 #define WELL_KNOWN_PORT	69		/* Well known TFTP port #		*/
-#define TIMEOUT		5UL		/* Seconds to timeout for a lost pkt	*/
+#define TIMEOUT		2UL		/* Seconds to timeout for a lost pkt	*/ /* 5 -> 2 - cu570m */
 #ifndef	CONFIG_NET_RETRY_COUNT
-# define TIMEOUT_COUNT	10		/* # of timeouts before giving up  */
+# define TIMEOUT_COUNT	3		/* # of timeouts before giving up  */ /* 10 -> 3 - cu570m */
 #else
 # define TIMEOUT_COUNT  (CONFIG_NET_RETRY_COUNT * 2)
 #endif
@@ -369,6 +369,10 @@ TftpHandler (uchar * pkt, unsigned dest, unsigned src, unsigned len)
 
 		TftpLastBlock = TftpBlock;
 		NetSetTimeout (TIMEOUT * CFG_HZ, TftpTimeout);
+/* cu570m start */
+		if(TftpTimeoutCount)
+			TftpTimeoutCount = 0;
+/* cu570m end */
 
 		store_block (TftpBlock - 1, pkt + 2, len);
 
@@ -435,6 +439,13 @@ TftpHandler (uchar * pkt, unsigned dest, unsigned src, unsigned len)
 	}
 }
 
+/* cu570m start */
+extern int do_bootm (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+
+#ifdef FW_RECOVERY
+extern ushort fw_recovery;
+#endif
+/* cu570m end */
 
 static void
 TftpTimeout (void)
@@ -444,6 +455,14 @@ TftpTimeout (void)
 #ifdef CONFIG_MCAST_TFTP
 		mcast_cleanup();
 #endif
+/* cu570m start */
+#ifdef FW_RECOVERY
+		if(fw_recovery) {
+			load_addr = simple_strtoul("9f020000", NULL, 16);
+			do_bootm(NULL, 0, 0, NULL);
+		}
+#endif
+/* cu570m end */
 		NetStartAgain ();
 	} else {
 		puts ("T ");
-- 
2.24.0


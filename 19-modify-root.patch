From a63c0b78f9c88cf17633a6b527cd78f68a91f73a Mon Sep 17 00:00:00 2001
From: Mike Banon <mikebdp2@gmail.com>
Date: Fri, 29 Nov 2019 18:04:20 +0000
Subject: [PATCH] Modify ./ files according to WR841N(D)v9 u-boot

---
 MAKEALL        |    4 +-
 Makefile       | 1619 ++++++++++++++++++++++++++++++++++++++++++++++--
 config.mk      |   97 ++-
 mips_config.mk |    6 +
 4 files changed, 1688 insertions(+), 38 deletions(-)

diff --git a/MAKEALL b/MAKEALL
index 1219fb373f..89d74a37e8 100755
--- a/MAKEALL
+++ b/MAKEALL
@@ -528,11 +528,15 @@ LIST_au1xx0="		\
 	gth2		\
 "
 
+LIST_mips24k="ar7100" # cu570m
+
 LIST_mips="		\
 	${LIST_mips4kc}	\
 	${LIST_mips5kc}	\
 	${LIST_au1xx0}	\
+	${LIST_mips24k}	\
 "
+# ${LIST_mips24k} - cu570m
 
 #########################################################################
 ## MIPS Systems		(little endian)
diff --git a/Makefile b/Makefile
index 90198f6583..0247898703 100644
--- a/Makefile
+++ b/Makefile
@@ -45,6 +45,14 @@ export	HOSTARCH HOSTOS
 # Deal with colliding definitions from tcsh etc.
 VENDOR=
 
+# cu570m start
+BUILDVERSION = 9.5.3.16
+
+ifndef COMPRESSED_UBOOT
+COMPRESSED_UBOOT = 0
+endif
+# cu570m end
+
 #########################################################################
 # Allow for silent builds
 ifeq (,$(findstring s,$(MAKEFLAGS)))
@@ -92,7 +100,9 @@ BUILD_DIR := $(shell cd $(BUILD_DIR) && /bin/pwd)
 $(if $(BUILD_DIR),,$(error output directory "$(saved-output)" does not exist))
 endif # ifneq ($(BUILD_DIR),)
 
-OBJTREE		:= $(if $(BUILD_DIR),$(BUILD_DIR),$(CURDIR))
+# cu570m
+# OBJTREE		:= $(if $(BUILD_DIR),$(BUILD_DIR),$(CURDIR))
+OBJTREE		:= $(CURDIR)
 SRCTREE		:= $(CURDIR)
 TOPDIR		:= $(SRCTREE)
 LNDIR		:= $(OBJTREE)
@@ -143,7 +153,9 @@ ifeq ($(ARCH),i386)
 CROSS_COMPILE = i386-linux-
 endif
 ifeq ($(ARCH),mips)
-CROSS_COMPILE = mips_4KC-
+# cu570m
+# CROSS_COMPILE = mips_4KC-
+CROSS_COMPILE = mips-linux-
 endif
 ifeq ($(ARCH),nios)
 CROSS_COMPILE = nios-elf-
@@ -178,6 +190,13 @@ include $(TOPDIR)/config.mk
 # U-Boot objects....order is important (i.e. start must be first)
 
 OBJS  = cpu/$(CPU)/start.o
+
+# cu570m start
+ifeq ($(COMPRESSED_UBOOT),1)
+OBJS_BOOTSTRAP  = cpu/$(CPU)/start_bootstrap.o
+endif
+# cu570m end
+
 ifeq ($(CPU),i386)
 OBJS += cpu/$(CPU)/start16.o
 OBJS += cpu/$(CPU)/reset.o
@@ -191,72 +210,90 @@ endif
 
 OBJS := $(addprefix $(obj),$(OBJS))
 
+# LIBS - cu570m start
 LIBS  = lib_generic/libgeneric.a
-LIBS += $(shell if [ -f board/$(VENDOR)/common/Makefile ]; then echo \
-	"board/$(VENDOR)/common/lib$(VENDOR).a"; fi)
+# LIBS += $(shell if [ -f board/$(VENDOR)/common/Makefile ]; then echo \
+# 	"board/$(VENDOR)/common/lib$(VENDOR).a"; fi)
 LIBS += board/$(BOARDDIR)/lib$(BOARD).a
 LIBS += cpu/$(CPU)/lib$(CPU).a
 ifdef SOC
 LIBS += cpu/$(CPU)/$(SOC)/lib$(SOC).a
 endif
-ifeq ($(CPU),ixp)
-LIBS += cpu/ixp/npe/libnpe.a
-endif
+# ifeq ($(CPU),ixp)
+# LIBS += cpu/ixp/npe/libnpe.a
+# endif
 LIBS += lib_$(ARCH)/lib$(ARCH).a
-LIBS += fs/cramfs/libcramfs.a fs/fat/libfat.a fs/fdos/libfdos.a fs/jffs2/libjffs2.a \
-	fs/reiserfs/libreiserfs.a fs/ext2/libext2fs.a
+# LIBS += fs/cramfs/libcramfs.a fs/fat/libfat.a fs/fdos/libfdos.a fs/jffs2/libjffs2.a \
+# 	fs/reiserfs/libreiserfs.a fs/ext2/libext2fs.a
 LIBS += net/libnet.a
-LIBS += disk/libdisk.a
-LIBS += drivers/bios_emulator/libatibiosemu.a
-LIBS += drivers/block/libblock.a
-LIBS += drivers/dma/libdma.a
-LIBS += drivers/hwmon/libhwmon.a
-LIBS += drivers/i2c/libi2c.a
-LIBS += drivers/input/libinput.a
-LIBS += drivers/misc/libmisc.a
-LIBS += drivers/mtd/libmtd.a
-LIBS += drivers/mtd/nand/libnand.a
-LIBS += drivers/mtd/nand_legacy/libnand_legacy.a
-LIBS += drivers/mtd/onenand/libonenand.a
-LIBS += drivers/net/libnet.a
-LIBS += drivers/net/sk98lin/libsk98lin.a
+# LIBS += disk/libdisk.a
+# LIBS += drivers/bios_emulator/libatibiosemu.a
+# LIBS += drivers/block/libblock.a
+# LIBS += drivers/dma/libdma.a
+# LIBS += drivers/hwmon/libhwmon.a
+# LIBS += drivers/i2c/libi2c.a
+# LIBS += drivers/input/libinput.a
+# LIBS += drivers/misc/libmisc.a
+# LIBS += drivers/mtd/libmtd.a
+# LIBS += drivers/mtd/nand/libnand.a
+# LIBS += drivers/mtd/nand_legacy/libnand_legacy.a
+# LIBS += drivers/mtd/onenand/libonenand.a
+# LIBS += drivers/net/libnet.a
+# LIBS += drivers/net/sk98lin/libsk98lin.a
 LIBS += drivers/pci/libpci.a
-LIBS += drivers/pcmcia/libpcmcia.a
-LIBS += drivers/spi/libspi.a
-ifeq ($(CPU),mpc83xx)
-LIBS += drivers/qe/qe.a
-endif
-ifeq ($(CPU),mpc85xx)
-LIBS += drivers/qe/qe.a
-endif
+# LIBS += drivers/pcmcia/libpcmcia.a
+# LIBS += drivers/spi/libspi.a
+# ifeq ($(CPU),mpc83xx)
+# LIBS += drivers/qe/qe.a
+# endif
+# ifeq ($(CPU),mpc85xx)
+# LIBS += drivers/qe/qe.a
+# endif
 LIBS += drivers/rtc/librtc.a
-LIBS += drivers/serial/libserial.a
-LIBS += drivers/usb/libusb.a
-LIBS += drivers/video/libvideo.a
-LIBS += post/libpost.a post/drivers/libpostdrivers.a
-LIBS += $(shell if [ -d post/lib_$(ARCH) ]; then echo \
-	"post/lib_$(ARCH)/libpost$(ARCH).a"; fi)
-LIBS += $(shell if [ -d post/lib_$(ARCH)/fpu ]; then echo \
-	"post/lib_$(ARCH)/fpu/libpost$(ARCH)fpu.a"; fi)
-LIBS += $(shell if [ -d post/cpu/$(CPU) ]; then echo \
-	"post/cpu/$(CPU)/libpost$(CPU).a"; fi)
-LIBS += $(shell if [ -d post/board/$(BOARDDIR) ]; then echo \
-	"post/board/$(BOARDDIR)/libpost$(BOARD).a"; fi)
+# LIBS += drivers/serial/libserial.a
+# LIBS += drivers/usb/libusb.a
+# LIBS += drivers/video/libvideo.a
+# LIBS += post/libpost.a post/drivers/libpostdrivers.a
+# LIBS += $(shell if [ -d post/lib_$(ARCH) ]; then echo \
+# 	"post/lib_$(ARCH)/libpost$(ARCH).a"; fi)
+# LIBS += $(shell if [ -d post/lib_$(ARCH)/fpu ]; then echo \
+# 	"post/lib_$(ARCH)/fpu/libpost$(ARCH)fpu.a"; fi)
+# LIBS += $(shell if [ -d post/cpu/$(CPU) ]; then echo \
+# 	"post/cpu/$(CPU)/libpost$(CPU).a"; fi)
+# LIBS += $(shell if [ -d post/board/$(BOARDDIR) ]; then echo \
+# 	"post/board/$(BOARDDIR)/libpost$(BOARD).a"; fi)
 LIBS += common/libcommon.a
-LIBS += libfdt/libfdt.a
-LIBS += api/libapi.a
+# LIBS += libfdt/libfdt.a
+# LIBS += api/libapi.a
+LIBS += $(BOARDLIBS)
+# LIBS - cu570m end
 
 LIBS := $(addprefix $(obj),$(LIBS))
 .PHONY : $(LIBS) $(VERSION_FILE)
 
+# cu570m start
+ifeq ($(COMPRESSED_UBOOT),1)
+LIBS_BOOTSTRAP = lib_bootstrap/libbootstrap.a
+# LIBS_BOOTSTRAP += lib_$(CPU)/lib$(CPU).a
+LIBS_BOOTSTRAP += board/$(BOARDDIR)/lib$(BOARD).a
+LIBS_BOOTSTRAP += cpu/$(CPU)/lib$(CPU).a
+ifneq ($(SOC),)
+LIBS_BOOTSTRAP += cpu/$(CPU)/$(SOC)/lib$(SOC).a
+endif
+endif
+
+ifeq ($(COMPRESSED_UBOOT),1)
+.PHONY : $(LIBS_BOOTSTRAP)
+endif
+# cu570m end
+
 # Add GCC lib
 PLATFORM_LIBS += -L $(shell dirname `$(CC) $(CFLAGS) -print-libgcc-file-name`) -lgcc
 
 # The "tools" are needed early, so put this first
 # Don't include stuff already done in $(LIBS)
-SUBDIRS	= tools \
-	  examples \
-	  api_examples
+# SUBDIRS tools,examples,api_examples,... -> tools,... - cu570m
+SUBDIRS	= tools
 
 .PHONY : $(SUBDIRS)
 
@@ -281,7 +318,11 @@ ifeq ($(ARCH),blackfin)
 ALL += $(obj)u-boot.ldr
 endif
 
+ifeq ($(COMPRESSED_UBOOT),1) # cu570m condition branch
+all:		$(ALL) $(obj)tuboot.bin
+else # old default path
 all:		$(ALL)
+endif # cu570m
 
 $(obj)u-boot.hex:	$(obj)u-boot
 		$(OBJCOPY) ${OBJCFLAGS} -O ihex $< $@
@@ -314,9 +355,10 @@ $(obj)u-boot.sha1:	$(obj)u-boot.bin
 $(obj)u-boot.dis:	$(obj)u-boot
 		$(OBJDUMP) -d $< > $@
 
+# $(BOARD_EXTRA_OBJS) - cu570m
 $(obj)u-boot:		depend $(SUBDIRS) $(OBJS) $(LIBS) $(LDSCRIPT)
 		UNDEF_SYM=`$(OBJDUMP) -x $(LIBS) |sed  -n -e 's/.*\($(SYM_PREFIX)__u_boot_cmd_.*\)/-u\1/p'|sort|uniq`;\
-		cd $(LNDIR) && $(LD) $(LDFLAGS) $$UNDEF_SYM $(__OBJS) \
+		cd $(LNDIR) && $(LD) $(LDFLAGS) $$UNDEF_SYM $(__OBJS) $(BOARD_EXTRA_OBJS) \
 			--start-group $(__LIBS) --end-group $(PLATFORM_LIBS) \
 			-Map u-boot.map -o u-boot
 
@@ -344,6 +386,38 @@ $(ONENAND_IPL):	$(VERSION_FILE)	$(obj)include/autoconf.mk
 $(U_BOOT_ONENAND):	$(ONENAND_IPL) $(obj)u-boot.bin $(obj)include/autoconf.mk
 		cat $(obj)onenand_ipl/onenand-ipl-2k.bin $(obj)u-boot.bin > $(obj)u-boot-onenand.bin
 
+# cu570m start
+ifeq ($(COMPRESSED_UBOOT),1)
+
+#LZMA = $(BUILD_DIR)/util/lzma
+LZMA = $(TOPDIR)/../../../util/lzma/bin/lzma
+
+$(obj)tuboot.bin:	$(obj)System.map $(obj)bootstrap.bin $(obj)u-boot.lzimg
+		@cat $(obj)bootstrap.bin > $@
+		@cat $(obj)u-boot.lzimg >> $@
+
+$(obj)u-boot.lzimg: $(obj)u-boot.bin $(obj)System.map
+		@rm -rf $(obj)u-boot.bin.lzma
+		@$(LZMA) --best --keep $(obj)u-boot.bin
+		@./tools/mkimage -A mips -T firmware -C lzma \
+		-a 0x$(shell grep "T _start" $(TOPDIR)/System.map | awk '{ printf "%s", $$1 }') \
+		-e 0x$(shell grep "T _start" $(TOPDIR)/System.map | awk '{ printf "%s", $$1 }') \
+		-n 'u-boot image' -d $(obj)u-boot.bin.lzma $@
+
+$(obj)bootstrap.bin:	bootstrap
+		$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
+
+bootstrap:	depend $(VERSION_FILE) $(SUBDIRS) $(OBJS_BOOTSTRAP) $(LIBS_BOOTSTRAP) $(LDSCRIPT_BOOTSTRAP)
+		UNDEF_SYM=`$(OBJDUMP) -x $(LIBS_BOOTSTRAP) |sed  -n -e 's/.*\(__u_boot_cmd_.*\)/-u\1/p'|sort|uniq`;\
+		$(LD) $(LDFLAGS_BOOTSTRAP) $$UNDEF_SYM $(OBJS_BOOTSTRAP) \
+			--start-group $(LIBS_BOOTSTRAP) --end-group $(PLATFORM_LIBS) \
+			-Map bootstrap.map -o bootstrap
+
+$(LIBS_BOOTSTRAP):
+		$(MAKE) -C `dirname $@`
+endif
+# cu570m end
+
 $(VERSION_FILE):
 		@( echo -n "#define U_BOOT_VERSION \"U-Boot " ; \
 		echo -n "$(U_BOOT_VERSION)" ; \
@@ -2674,6 +2748,1459 @@ qemu_mips_config: unconfig
 purple_config :		unconfig
 	@$(MKCONFIG) $(@:_config=) mips mips purple
 
+# cu570m huge start
+#########################################################################
+## MIPS32 AR7100 (24K)
+#########################################################################
+tb225_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@./mkconfig -a tb225 mips mips tb225 ar7100 ar7100
+
+pb42_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@./mkconfig -a pb42 mips mips pb42 ar7100 ar7100
+
+tb243_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@echo "#define CONFIG_AR9100 1" >>include/config.h
+	@./mkconfig -a tb243 mips mips tb243 ar7100 ar7100
+
+ap83_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@echo "#define CONFIG_AR9100 1" >>include/config.h
+	@./mkconfig -a ap83 mips mips ap83 ar7100 ar7100
+
+ap81_config		: 	unconfig
+	@ >include/config.h
+	@echo '#ifndef _INCLUDE_CONFIG_H' >>include/config.h
+	@echo '#define _INCLUDE_CONFIG_H' >>include/config.h
+	@echo '#define CONFIG_AR7100 1' >>include/config.h
+	@echo '#define CONFIG_AR9100 1' >>include/config.h
+
+ifeq ($(CONFIG_AP81_CARRIER_CUS109), 1)
+	@echo '#define CONFIG_AP81_CUS109 1' >>include/config.h
+endif
+ifeq ($(BUILD_CONFIG), _4m)
+ifeq ($(CONFIG_CARRIER_4MB), 1)
+	@echo '#define BUILD_CONFIG_OVERRIDE 1' >>include/config.h
+	@echo '#define CFG_FLASH_SIZE 0x00400000' >>include/config.h
+	@echo '#define CONFIG_BOOTARGS "console=ttyS0,115200 root=31:02 rootfstype=squashfs init=/sbin/init mtdparts=ar7100-nor0:256k(u-boot),128k(u-boot-env),2112k(rootfs),384k(config),1024k(uImage),64k(nvram),64k(lang),64k(ART)"' >>include/config.h
+	@echo '#define MTDPARTS_DEFAULT "mtdparts=ar7100-nor0:256k(u-boot),128k(u-boot-env),2112k(rootfs),384k(config),1024k(uImage),64k(nvram),64k(lang),64k(ART)"' >>include/config.h
+	@echo '#define CONFIG_BOOTCOMMAND "bootm 0xbf300000"' >>include/config.h
+else
+	@echo '#define BUILD_CONFIG_OVERRIDE 1' >>include/config.h
+	@echo '#define CFG_FLASH_SIZE 0x00400000' >>include/config.h
+	@echo '#define CONFIG_BOOTARGS "console=ttyS0,115200 root=31:02 rootfstype=jffs2 init=/sbin/init mtdparts=ar7100-nor0:256k(u-boot),64k(u-boot-env),2688k(rootfs),1024k(uImage),64k(ART)"' >>include/config.h
+	@echo '#define MTDPARTS_DEFAULT "mtdparts=ar7100-nor0:256k(u-boot),64k(u-boot-env),2688k(rootfs),1024k(uImage),64k(ART)"' >>include/config.h
+	@echo '#define CONFIG_BOOTCOMMAND "bootm 0xbf300000"' >>include/config.h
+endif
+endif
+	@echo '#endif /* _INCLUDE_CONFIG_H */' >>include/config.h
+	@./mkconfig -a ap81 mips mips ap81 ar7100 ar7100
+
+ap94_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@./mkconfig -a ap94 mips mips ap94 ar7100 ar7100
+
+ap94min_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@./mkconfig -a ap94min mips mips ap94 ar7100 ar7100
+
+pb44_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@./mkconfig -a pb44 mips mips pb44 ar7100 ar7100
+
+pb45_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@./mkconfig -a pb45 mips mips pb45 ar7100 ar7100
+
+pb47_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@./mkconfig -a pb47 mips mips pb47 ar7100 ar7100
+
+ap96_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@./mkconfig -a ap96 mips mips ap96 ar7100 ar7100
+
+cus97_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7100 1" >>include/config.h
+	@echo "#define CONFIG_AR9100 1" >>include/config.h
+	@./mkconfig -a cus97 mips mips cus97 ar7100 ar7100
+ar7240_emu_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ar7240_emu mips mips ar7240_emu ar7240 ar7240
+
+wasp_emu_config			: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+	@./mkconfig -a wasp_emu mips mips wasp_emu ar7240 ar7240
+
+db12x_config			: 	unconfig
+	@ >include/config.h
+
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f2e)
+	@echo '#define CONFIG_F2E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+ifneq ($(findstring cus227,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_CUS227 1' >>include/config.h
+endif
+	@echo "#define BUILD_VERSION "\"$(BUILDVERSION)\" >>include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1' >>include/config.h
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1' >>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifeq ($(ATH_DUAL_FLASH),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT  1' >>include/config.h
+endif
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+ifeq ($(DB12X_P2P_ENV), 1)
+        @echo "#define CONFIG_DB12X_P2P 1" >>include/config.h
+endif
+	@./mkconfig -a db12x mips mips db12x ar7240 ar7240
+
+#board953x_config		:	unconfig
+ap143_config	board953x_config	:	unconfig
+	@ >include/config.h
+	@echo '#define CONFIG_ATHEROS		1'	>include/config.h
+	@echo '#define CONFIG_MACH_QCA953x	1'	>>include/config.h
+	@echo '#define CFG_INIT_STACK_IN_SRAM	1'	>>include/config.h
+	@echo '#define CONFIG_'`echo $(CFG_BOARD_TYPE) | tr [a-z] [A-Z] | sed s/-/_/g`'	1' >>include/config.h
+	@echo '#define __CONFIG_BOARD_NAME $(CFG_BOARD_TYPE)' >>include/config.h
+	@echo '#define CONFIG_BOARD_NAME "$(CFG_BOARD_TYPE)"' >>include/config.h
+	@echo "#define BUILD_VERSION "\"$(BUILDVERSION)\" >>include/config.h
+
+ifdef pll
+	@echo '#define CFG_PLL_FREQ		$(pll)'	>>include/config.h
+else
+	@echo '#define CFG_PLL_FREQ		CFG_PLL_550_400_200'	>>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS 1' >>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS 2' >>include/config.h
+endif
+
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+
+ifeq ($(FW_RECOVERY), y)
+	@echo '#define FW_RECOVERY 1' >>include/config.h
+	@echo '#define FW_RECOVERY_DEV "$(FW_RECOVERY_DEV)"' >>include/config.h
+	@echo "#define FW_RECOVERY_INPUT_BUTTON_GPIO $(FW_INPUT_BUTTON_GPIO)" >>include/config.h
+	@echo "#define FW_RECOVERY_OUTPUT_LED_GPIO $(FW_OUTPUT_LED_GPIO)" >>include/config.h
+	@echo "#define FW_RECOVERY_OUTPUT_LED_ON $(FW_OUTPUT_LED_ON)" >>include/config.h
+endif
+	@./mkconfig -a board953x mips mips board953x atheros
+
+ap120_config			: 	unconfig
+	@ >include/config.h
+
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f2e)
+	@echo '#define CONFIG_F2E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1' >>include/config.h
+endif
+ifeq ($(or $(BOOT_FROM_NAND),$(ATH_DUAL_FLASH)),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1' >>include/config.h
+endif
+	@./mkconfig -a ap120 mips mips ap120 ar7240 ar7240
+
+db12x-lte_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f2e)
+	@echo '#define CONFIG_F2E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifdef BOOT_FROM_NAND
+	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
+ifeq ($(BUILD_TYPE),jffs2)
+	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
+else
+	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
+endif
+endif
+#
+# U-Boot from spi flash. Kernel & FS in NAND
+#
+ifdef ATH_DUAL_FLASH
+	@echo "#define ATH_DUAL_FLASH 1" >>include/config.h
+ifeq ($(BUILD_TYPE),jffs2)
+	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
+else
+	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
+endif
+endif
+	@./mkconfig -a db12x mips mips db12x ar7240 ar7240
+
+db12x-hgw_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f2e)
+	@echo '#define CONFIG_F2E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+ifneq ($(findstring db12x-hgw,$(BOARD_TYPE)),)
+	@echo '#define CONFIG_DB12X-HGW 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1' >>include/config.h
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1' >>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifeq ($(ATH_DUAL_FLASH),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1' >>include/config.h
+endif
+#
+# U-Boot from spi flash. Kernel & FS in NAND
+#
+ifdef ATH_DUAL_FLASH
+	@echo "#define ATH_DUAL_FLASH 1" >>include/config.h
+endif
+
+	@./mkconfig -a db12x-hybrid mips mips db12x-hybrid ar7240 ar7240
+
+zte-mf28l_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f2e)
+	@echo '#define CONFIG_F2E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1' >>include/config.h
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1' >>include/config.h
+endif
+ifeq ($(ATH_DUAL_FLASH),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1' >>include/config.h
+endif
+
+	@./mkconfig -a db12x mips mips db12x ar7240 ar7240
+
+
+reh132_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifdef BOOT_FROM_NAND
+	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
+ifeq ($(BUILD_TYPE),jffs2)
+	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
+else
+	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
+endif
+endif
+	@./mkconfig -a reh132 mips mips reh132 ar7240 ar7240
+
+db12x-hybrid_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifdef BOOT_FROM_NAND
+	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
+ifeq ($(BUILD_TYPE),jffs2)
+	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
+else
+	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
+endif
+endif
+	@./mkconfig -a db12x-hybrid mips mips db12x-hybrid ar7240 ar7240
+
+aph126_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifdef BOOT_FROM_NAND
+	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
+ifeq ($(BUILD_TYPE),jffs2)
+	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
+else
+	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
+endif
+endif
+	@./mkconfig -a aph126 mips mips aph126 ar7240 ar7240
+
+aph128_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifdef BOOT_FROM_NAND
+	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
+ifeq ($(BUILD_TYPE),jffs2)
+	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
+else
+	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
+endif
+endif
+	@./mkconfig -a aph128 mips mips aph128 ar7240 ar7240
+
+dhp1565_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifdef BOOT_FROM_NAND
+	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
+ifeq ($(BUILD_TYPE),jffs2)
+	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
+else
+	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
+endif
+endif
+	@./mkconfig -a dhp1565 mips mips dhp1565 ar7240 ar7240
+
+
+db12x-extender_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+ifneq ($(findstring ap123,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+endif
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifdef BOOT_FROM_NAND
+	@echo "#define CONFIG_ATH_NAND_FL 1" >>include/config.h
+ifeq ($(BUILD_TYPE),jffs2)
+	@echo "#define CONFIG_ATH_NAND_JFFS2	1" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	0" >>include/config.h
+else
+	@echo "#define CONFIG_ATH_NAND_JFFS2	0" >>include/config.h
+	@echo "#define CONFIG_ATH_NAND_YAFFS	1" >>include/config.h
+endif
+endif
+	@./mkconfig -a db12x-extender mips mips db12x-extender ar7240 ar7240
+
+ap123_config			: 	unconfig
+	@ >include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT 1' >>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 1' >>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY 1' >>include/config.h
+	@echo '#define CFG_AG7240_NMACS 2' >>include/config.h
+endif
+
+ifneq ($(findstring mi124,$(BUILD_CONFIG)),)
+	@echo '#define CONFIG_MI124 1' >>include/config.h
+endif
+
+	@echo '#define CONFIG_AP123 1' >>include/config.h
+	@echo '#define CONFIG_ROOTFS_TYPE "rootfstype=squashfs"' >>include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_WASP 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+ifeq ($(DB12X_P2P_ENV), 1)
+	@echo "#define CONFIG_DB12X_P2P 1" >>include/config.h
+endif
+
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1' >>include/config.h
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1' >>include/config.h
+endif
+ifeq ($(ATH_DUAL_FLASH),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1' >>include/config.h
+endif
+
+	@./mkconfig -a ap123 mips mips ap123 ar7240 ar7240
+
+
+ap91_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap91 mips mips ap91 ar7240 ar7240
+ap91-2MB_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap91-2MB mips mips ap91-2MB ar7240 ar7240
+ap91-2x8_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap91-2x8 mips mips ap91-2x8 ar7240 ar7240
+ap93_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap93 mips mips ap93 ar7240 ar7240
+ap91-router_config	: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap91-router mips mips ap91-router ar7240 ar7240
+ap93-hgw_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap93-hgw mips mips ap93-hgw ar7240 ar7240
+cus136_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a cus136 mips mips cus136 ar7240 ar7240
+wrt54g_config           :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a wrt54g mips mips wrt54g ar7240 ar7240
+pb90_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a pb90 mips mips pb90 ar7240 ar7240
+tb327_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a tb327 mips mips tb327 ar7240 ar7240
+pb93_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a pb93 mips mips pb93 ar7240 ar7240
+pb9x_config             :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a pb9x mips mips pb9x ar7240 ar7240
+
+pb9x-2x8_config             :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a pb9x-2x8 mips mips pb9x-2x8 ar7240 ar7240
+ap98_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a ap98 mips mips ap98 ar7240 ar7240
+
+pb9x-2.6.31_config             :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a pb9x-2.6.31 mips mips pb9x-2.6.31 ar7240 ar7240
+
+pb9x-offload_config             :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+ifdef ROOTFS
+	@echo "#define ROOTFS $(ROOTFS)" >>include/config.h
+endif
+	@./mkconfig -a pb9x-2.6.31 mips mips pb9x-2.6.31 ar7240 ar7240
+
+pb92_config             :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a pb92 mips mips pb92 ar7240 ar7240
+
+ap99_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a ap99 mips mips ap99 ar7240 ar7240
+
+ap99-small_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a ap99-small mips mips ap99-small ar7240 ar7240
+
+
+ap99-2.6.31_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a ap99-2.6.31 mips mips ap99-2.6.31 ar7240 ar7240
+
+ap99-hgw_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a ap99-hgw mips mips ap99-hgw ar7240 ar7240
+ap99-ivi_config     :   unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+ifdef FLASH_SIZE
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+endif
+	@./mkconfig -a ap99-ivi mips mips ap99-ivi ar7240 ar7240
+
+ap101_config             :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap101 mips mips ap101 ar7240 ar7240
+
+ap101-small_config       :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap101-small mips mips ap101-small ar7240 ar7240
+
+ap101-2.6.31_config      :       unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap101-2.6.31 mips mips ap101-2.6.31 ar7240 ar7240
+
+mi93_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a mi93 mips mips mi93 ar7240 ar7240
+
+ap111_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap111 mips mips ap111 ar7240 ar7240
+
+ap111-2.6.31_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@./mkconfig -a ap111-2.6.31 mips mips ap111-2.6.31 ar7240 ar7240
+
+hornet_common_config        :
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_MACH_HORNET 1" >>include/config.h
+ifdef BUILD_EMU
+	@echo "#define CONFIG_HORNET_EMU 1" >>include/config.h
+ifeq ($(BUILD_EMU), 24)
+	@echo "#define CONFIG_HORNET_EMU_HARDI 1" >>include/config.h
+	@echo "#define CONFIG_HORNET_EMU_HARDI_WLAN 1" >>include/config.h
+else
+
+ifeq ($(BUILD_EMU), 40)
+    #
+	# No need to include CONFIG_HORNET_EMU_HARDI_WLAN in 40Mhz, only for emulation and 24Mhz board
+	#
+else
+    #
+	# Configure it as 24Mhz by default
+	#
+	@export BUILD_EMU=24
+	@echo "#define CONFIG_HORNET_EMU_HARDI_WLAN 1" >>include/config.h
+endif
+endif
+endif
+ifeq ($(CONFIG_HORNET_XTAL), 40)
+	@echo "#define CONFIG_40MHZ_XTAL_SUPPORT 1" >>include/config.h
+endif
+ifeq ($(CONFIG_HORNET_1_1_WAR), 1)
+	@echo "#define CONFIG_HORNET_1_1_WAR 1" >>include/config.h
+endif
+ifeq ($(AG7240_BROADCAST_ENABLE), 1)
+	@echo "#define AG7240_BROADCAST_ENABLE 1" >>include/config.h
+endif
+ifeq ($(NEW_DDR_TAP_CAL), 1)
+	@echo "#define NEW_DDR_TAP_CAL 1" >>include/config.h
+endif
+
+ap121_config		    : 	unconfig    hornet_common_config
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+ifdef BOARD_STRING
+	@echo "#define BOARD_STRING 1" >>include/config.h
+endif
+	@./mkconfig -a ap121 mips mips ap121 ar7240 ar7240
+ap121-2x16_config		    : 	unconfig    hornet_common_config
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+	@./mkconfig -a ap121 mips mips ap121 ar7240 ar7240
+
+ap121-2.6.31_config		    : 	unconfig    hornet_common_config
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+	@./mkconfig -a ap121 mips mips ap121 ar7240 ar7240
+
+ap121-2.6.31-2MB_config		: 	unconfig    hornet_common_config
+	@./mkconfig -a ap121 mips mips ap121 ar7240 ar7240
+ifeq ($(VXWORKS_UBOOT), 1)
+	@echo "#define VXWORKS_UBOOT 1" >>include/config.h
+endif
+
+ap121-2MB_config		: 	unconfig   hornet_common_config
+	@./mkconfig -a ap121 mips mips ap121 ar7240 ar7240
+
+ap121-hgw_config		    : 	unconfig    hornet_common_config
+	@echo "#define FLASH_SIZE $(FLASH_SIZE)" >>include/config.h
+	@./mkconfig -a ap121 mips mips ap121 ar7240 ar7240
+
+hornet_emu_config		: 	unconfig
+	@ >include/config.h
+	@echo "#define CONFIG_AR7240 1" >>include/config.h
+	@echo "#define CONFIG_MACH_HORNET 1" >>include/config.h
+ifdef BUILD_EMU
+	@echo "#define CONFIG_HORNET_EMU 1" >>include/config.h
+ifeq ($(BUILD_EMU), 24)
+	@echo "#define CONFIG_HORNET_EMU_HARDI 1" >>include/config.h
+	@echo "#define CONFIG_HORNET_EMU_HARDI_WLAN 1" >>include/config.h
+else
+
+ifeq ($(BUILD_EMU), 40)
+    #
+	# No need to include CONFIG_HORNET_EMU_HARDI_WLAN in 40Mhz, only for emulation and 24Mhz board
+	#
+else
+    #
+	# Configure it as 24Mhz by default
+	#
+	@export BUILD_EMU=24
+	@echo "#define CONFIG_HORNET_EMU_HARDI_WLAN 1" >>include/config.h
+endif
+endif
+endif
+	@./mkconfig -a hornet_emu mips mips hornet_emu ar7240 ar7240
+
+scoemu_config: 	unconfig
+	@echo '#define CONFIG_ATHEROS		1'	>include/config.h
+	@echo '#define CONFIG_MACH_QCA955x	1'	>>include/config.h
+	@echo '#define CFG_INIT_STACK_IN_SRAM	1'	>>include/config.h
+	@echo '#define CONFIG_ATH_EMULATION	1'	>>include/config.h
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT	1'	>>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT	1'	>>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY	1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f2e)
+	@echo '#define CONFIG_F2E_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	2'	>>include/config.h
+endif
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1'	>>include/config.h
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1'	>>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifeq ($(ATH_DUAL_FLASH),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1'	>>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifdef FLASH_SIZE
+	@echo '#define FLASH_SIZE	$(FLASH_SIZE)'	>>include/config.h
+endif
+	@./mkconfig -a scoemu mips mips scoemu atheros
+
+
+ifneq ($(findstring $(BOARD_TYPE), board955x-offload-target),) #{
+ifneq ($(findstring $(BUILD_CONFIG), _ap136),)
+CFG_BOARD_TYPE=ap136
+endif
+ifneq ($(findstring $(BUILD_CONFIG), _ap132),)
+CFG_BOARD_TYPE=ap132
+endif
+endif #}
+
+ifneq ($(findstring $(BOARD_TYPE), board955x-offload-host),)
+ifneq ($(findstring $(BUILD_CONFIG), _ap135_bootrom_pcie),)
+CFG_BOARD_TYPE=ap135
+ETH_CONFIG=_s17
+ATH_GMAC_GE0_IS_CONNECTED=1
+ATH_GMAC_GE1_IS_CONNECTED=1
+ATH_GMAC0_MII=ATHR_RGMII
+ATH_GMAC1_MII=ATHR_SGMII
+#sgmii defines
+ATH_CFG_SGMII=1
+ATH_CONFIG_SWAP_SGMII=0
+AH_CAL_IN_FLASH_PCI=1
+ATH_S17_PHY0_WAN=1
+ATH_SGMII_FORCED=1
+ATH_S17_MAC0_SGMII=1
+FLASH_SIZE=16
+ATH_RGMII_CAL=1
+endif
+
+ifneq ($(findstring $(BUILD_CONFIG), _ap136 _ap136_bootrom),)
+CFG_BOARD_TYPE=ap136
+
+ifneq ($(findstring $(BUILD_CONFIG), _ap136_bootrom),) #{
+ETH_CONFIG=_s17
+ATH_GMAC_GE0_IS_CONNECTED=1
+ATH_GMAC_GE1_IS_CONNECTED=1
+ATH_GMAC0_MII=ATHR_RGMII
+ATH_GMAC1_MII=ATHR_SGMII
+#sgmii defines
+ATH_CFG_SGMII=1
+ATH_CONFIG_SWAP_SGMII=0
+AH_CAL_IN_FLASH_PCI=1
+ATH_S17_PHY0_WAN=1
+ATH_SGMII_FORCED=1
+#LED defines
+ATH_SUPPORT_LED=1
+GPIO_PIN_FUNC_0=7
+GPIO_PIN_FUNC_1=7
+GPIO_PIN_FUNC_2=7
+ATH_LED_CUSTOMER=CUSTOMER_ATHEROS_SCORPION
+endif #}
+
+endif
+endif
+board955x_config: 	unconfig
+	@echo '#define CONFIG_ATHEROS		1'	>include/config.h
+	@echo '#define CONFIG_MACH_QCA955x	1'	>>include/config.h
+	@echo '#define CFG_INIT_STACK_IN_SRAM	1'	>>include/config.h
+	@echo '#define CONFIG_'`echo $(CFG_BOARD_TYPE) | tr [a-z] [A-Z] | sed s/-/_/g`'	1' >>include/config.h
+	@echo '#define __CONFIG_BOARD_NAME $(CFG_BOARD_TYPE)' >>include/config.h
+	@echo '#define CONFIG_BOARD_NAME "$(CFG_BOARD_TYPE)"' >>include/config.h
+ifdef pll
+	@echo '#define CFG_PLL_FREQ		$(pll)'	>>include/config.h
+else
+	@echo '#define CFG_PLL_FREQ		CFG_PLL_720_600_200'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+endif
+
+ifeq ($(ATH_SGMII_FORCED),1)
+	@echo '#define ATH_SGMII_FORCED		1'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+
+ifneq (,$(findstring $(CFG_BOARD_TYPE),ap136 ap135)) #{
+	@echo '#define CFG_ATH_GMAC_NMACS	2'	>>include/config.h
+	@echo '#define CFG_ATH_GE1_IS_CONNECTED 1' 	>>include/config.h
+	@echo '#define CONFIG_ATHRS_GMAC_SGMII  1'      >>include/config.h
+
+ifeq ($(ATH_S17_PHY0_WAN),1)
+	@echo "#define CONFIG_ATH_S17_WAN 1" >> include/config.h
+endif
+
+endif #}
+ifeq ($(S17_SWMAC6_CONNECTED),1)
+	@echo "#define CONFIG_S17_SWMAC6_CONNECTED 1" >> include/config.h
+endif
+endif
+
+ifeq ($(CFG_BOARD_TYPE), ap132)
+	@echo '#define CFG_ATH_GMAC_NMACS       2'      >>include/config.h
+	@echo '#define CFG_ATH_GE1_IS_CONNECTED 1'      >>include/config.h
+	@echo '#define CONFIG_ATHRS_GMAC_SGMII  1'      >>include/config.h
+	@echo '#define CONFIG_MGMT_INIT         1'      >>include/config.h
+ifeq ($(ATH_SWITCH_ONLY_MODE),1)
+	@echo "#define CONFIG_ATHR_SWITCH_ONLY_MODE 1" >> include/config.h
+endif
+endif
+
+ifeq ($(ATH_S17_MAC0_SGMII),1)
+	@echo "#define ATH_S17_MAC0_SGMII 1" >> include/config.h
+endif
+
+
+#ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+#	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+#	@echo '#define CFG_DUAL_PHY_SUPPORT	1'	>>include/config.h
+#else
+#ifeq ($(ETH_CONFIG), _s17_hwaccel)
+#	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+#	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+#endif
+ifeq ($(ETH_CONFIG2), _ar8033) #{
+	@echo '#define CONFIG_ATHR_8033_PHY     1'      >>include/config.h
+	@echo '#define CONFIG_ATHRS_GMAC_SGMII  1'      >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT	1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	2'	>>include/config.h
+ifeq ($(ATH_MDC_GPIO),1)
+	@echo '#define ATH_MDC_GPIO       1'      >>include/config.h
+endif
+
+endif #}
+ifeq ($(ETH_CONFIG), _vir) #{
+
+ifneq ($(findstring ATHR_MII,$(ATH_GMAC0_MII)),)
+	@echo "#define GMAC0_MII 1" >> include/config.h
+
+else
+	@echo '#define CONFIG_VIR_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+
+ifeq ($(ATH_SLAVE_CONNECTED),1)
+	@echo "#define CONFIG_SCO_SLAVE_CONNECTED 1" >> include/config.h
+endif
+
+endif #}
+ifeq ($(ATH_SGMII_FORCED),1)
+	@echo "#define ATH_SGMII_FORCED_MODE 1" >> include/config.h
+endif
+
+ifeq ($(ATH_RGMII_CAL),1)
+	@echo "#define ATH_RGMII_CAL 1" >> include/config.h
+endif
+
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1'	>>include/config.h
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1'	>>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifeq ($(ATH_DUAL_FLASH),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1'	>>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifdef FLASH_SIZE
+	@echo '#define FLASH_SIZE	$(FLASH_SIZE)'	>>include/config.h
+endif
+	@./mkconfig -a board955x mips mips board955x atheros
+
+
+aph131_config: 	unconfig
+	@echo '#define CONFIG_ATHEROS		1'	>include/config.h
+	@echo '#define CONFIG_MACH_QCA955x	1'	>>include/config.h
+	@echo '#define CFG_INIT_STACK_IN_SRAM	1'	>>include/config.h
+	@echo '#define CONFIG_'`echo $(BOARD_TYPE) | tr [a-z] [A-Z] | sed s/-/_/g`'	1' >>include/config.h
+	@echo '#define __CONFIG_BOARD_NAME $(BOARD_TYPE)' >>include/config.h
+	@echo '#define CONFIG_BOARD_NAME "$(BOARD_TYPE)"' >>include/config.h
+ifdef pll
+	@echo '#define CFG_PLL_FREQ		$(pll)'	>>include/config.h
+else
+	@echo '#define CFG_PLL_FREQ		CFG_PLL_720_600_240'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+endif
+
+ifeq ($(ATH_SGMII_FORCED),1)
+	@echo '#define ATH_SGMII_FORCED		1'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+
+ifneq (,$(findstring $(CFG_BOARD_TYPE),ap136 ap135)) #{
+	@echo '#define CFG_ATH_GMAC_NMACS	2'	>>include/config.h
+	@echo '#define CFG_ATH_GE1_IS_CONNECTED 1' 	>>include/config.h
+	@echo '#define CONFIG_ATHRS_GMAC_SGMII  1'      >>include/config.h
+
+ifeq ($(ATH_S17_PHY0_WAN),1)
+	@echo "#define CONFIG_ATH_S17_WAN 1" >> include/config.h
+endif
+
+endif #}
+ifeq ($(S17_SWMAC6_CONNECTED),1)
+	@echo "#define CONFIG_S17_SWMAC6_CONNECTED 1" >> include/config.h
+endif
+endif
+
+ifeq ($(CFG_BOARD_TYPE), ap132)
+	@echo '#define CFG_ATH_GMAC_NMACS       2'      >>include/config.h
+	@echo '#define CFG_ATH_GE1_IS_CONNECTED 1'      >>include/config.h
+	@echo '#define CONFIG_ATHRS_GMAC_SGMII  1'      >>include/config.h
+	@echo '#define CONFIG_MGMT_INIT         1'      >>include/config.h
+ifeq ($(ATH_SWITCH_ONLY_MODE),1)
+	@echo "#define CONFIG_ATHR_SWITCH_ONLY_MODE 1" >> include/config.h
+endif
+endif
+
+ifeq ($(ATH_S17_MAC0_SGMII),1)
+	@echo "#define ATH_S17_MAC0_SGMII 1" >> include/config.h
+endif
+
+
+#ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+#	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+#	@echo '#define CFG_DUAL_PHY_SUPPORT	1'	>>include/config.h
+#else
+#ifeq ($(ETH_CONFIG), _s17_hwaccel)
+#	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+#	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+#endif
+ifeq ($(ETH_CONFIG2), _ar8033) #{
+	@echo '#define CONFIG_ATHR_8033_PHY     1'      >>include/config.h
+	@echo '#define CONFIG_ATHRS_GMAC_SGMII  1'      >>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT	1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	2'	>>include/config.h
+ifeq ($(ATH_MDC_GPIO),1)
+	@echo '#define ATH_MDC_GPIO       1'      >>include/config.h
+endif
+
+endif #}
+ifeq ($(ETH_CONFIG), _vir) #{
+
+ifneq ($(findstring ATHR_MII,$(ATH_GMAC0_MII)),)
+	@echo "#define GMAC0_MII 1" >> include/config.h
+
+else
+	@echo '#define CONFIG_VIR_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+
+ifeq ($(ATH_SLAVE_CONNECTED),1)
+	@echo "#define CONFIG_SCO_SLAVE_CONNECTED 1" >> include/config.h
+endif
+
+endif #}
+ifeq ($(ATH_SGMII_FORCED),1)
+	@echo "#define ATH_SGMII_FORCED_MODE 1" >> include/config.h
+endif
+
+ifeq ($(ATH_RGMII_CAL),1)
+	@echo "#define ATH_RGMII_CAL 1" >> include/config.h
+endif
+
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1'	>>include/config.h
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1'	>>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifeq ($(ATH_DUAL_FLASH),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1'	>>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifdef FLASH_SIZE
+	@echo '#define FLASH_SIZE	$(FLASH_SIZE)'	>>include/config.h
+endif
+	@./mkconfig -a aph131 mips mips aph131 atheros
+
+ap138_config: 	unconfig
+	@echo '#define CONFIG_ATHEROS		1'	>include/config.h
+	@echo '#define CONFIG_MACH_QCA955x	1'	>>include/config.h
+	@echo '#define CFG_INIT_STACK_IN_SRAM	1'	>>include/config.h
+ifdef pll
+	@echo '#define CFG_PLL_FREQ		$(pll)'	>>include/config.h
+else
+	@echo '#define CFG_PLL_FREQ		CFG_PLL_720_600_240'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG2), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT	1'	>>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG2), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+	@echo '#define CFG_DUAL_PHY_SUPPORT	1'	>>include/config.h
+else
+ifeq ($(ETH_CONFIG), _s17_hwaccel)
+	@echo '#define CONFIG_ATHRS17_PHY	1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+endif
+ifeq ($(ETH_CONFIG), _s16)
+	@echo '#define CONFIG_AR7242_S16_PHY	1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f1e)
+	@echo '#define CONFIG_F1E_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _f2e)
+	@echo '#define CONFIG_F2E_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+
+ifeq ($(ETH_CONFIG), _vir)
+	@echo '#define CONFIG_VIR_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	1'	>>include/config.h
+endif
+ifeq ($(ETH_CONFIG), _s27)
+	@echo '#define CFG_ATHRS27_PHY		1'	>>include/config.h
+	@echo '#define CFG_ATH_GMAC_NMACS	2'	>>include/config.h
+endif
+ifeq ($(BOOT_FROM_NAND),1)
+	@echo '#define CONFIG_ATH_NAND_BR	1'	>>include/config.h
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1'	>>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifeq ($(ATH_DUAL_FLASH),1)
+	@echo '#define CONFIG_ATH_NAND_SUPPORT	1'	>>include/config.h
+	@echo "#define ATH_CAL_NAND_PARTITION "\"$(strip ${ATH_CAL_NAND_PARTITION})\" >>include/config.h
+	@echo '#define ATH_CAL_OFF_INVAL        0xbad0ff' >>include/config.h
+endif
+ifdef FLASH_SIZE
+	@echo '#define FLASH_SIZE	$(FLASH_SIZE)'	>>include/config.h
+endif
+	@./mkconfig -a board955x mips mips board955x atheros
+
+# cu570m huge end
+
 #========================================================================
 # Nios
 #========================================================================
@@ -2839,7 +4366,9 @@ ms7722se_config :	unconfig
 #########################################################################
 #########################################################################
 
+# Making $@ - cu570m
 clean:
+	@echo Making $@
 	@rm -f $(obj)examples/82559_eeprom $(obj)examples/eepro100_eeprom \
 	       $(obj)examples/hello_world  $(obj)examples/interrupt	  \
 	       $(obj)examples/mem_to_mem_idma2intr			  \
@@ -2864,8 +4393,15 @@ clean:
 		\( -name 'core' -o -name '*.bak' -o -name '*~' \
 		-o -name '*.o'	-o -name '*.a'	\) -print \
 		| xargs rm -f
+ifeq ($(COMPRESSED_UBOOT),1) # cu570m start
+	@rm -f lib_bootstrap/*.o
+	@rm -f lib_bootstrap/*.a
+	@rm -f bootstrap $(obj)bootstrap.bin $(obj)tuboot.bin $(obj)u-boot.lzimg
+endif # cu570m end
 
+# Making $@ - cu570m
 clobber:	clean
+	@echo Making $@
 	@find $(OBJTREE) -type f \( -name .depend \
 		-o -name '*.srec' -o -name '*.bin' -o -name u-boot.img \) \
 		-print0 \
diff --git a/config.mk b/config.mk
index 6e280bc..a37c983 100644
--- a/config.mk
+++ b/config.mk
@@ -105,6 +105,9 @@ endif
 HOSTCFLAGS	= -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer
 HOSTSTRIP	= strip
 
+# cu570m
+COMPRESS    = lzma
+
 #########################################################################
 #
 # Option checker (courtesy linux kernel) to ensure
@@ -127,6 +130,9 @@ OBJCOPY = $(CROSS_COMPILE)objcopy
 OBJDUMP = $(CROSS_COMPILE)objdump
 RANLIB	= $(CROSS_COMPILE)RANLIB
 
+# cu570m
+.depend : CC = $(CROSS_COMPILE)gcc
+
 ifneq (,$(findstring s,$(MAKEFLAGS)))
 ARFLAGS = cr
 else
@@ -134,7 +140,9 @@ ARFLAGS = crv
 endif
 RELFLAGS= $(PLATFORM_RELFLAGS)
 DBGFLAGS= -g # -DDEBUG
-OPTFLAGS= -Os #-fomit-frame-pointer
+# cu570m
+### R3B0RN -Os => -O ### #-fomit-frame-pointer
+OPTFLAGS= -O
 ifndef LDSCRIPT
 #LDSCRIPT := $(TOPDIR)/board/$(BOARDDIR)/u-boot.lds.debug
 ifeq ($(CONFIG_NAND_U_BOOT),y)
@@ -145,6 +153,9 @@ endif
 endif
 OBJCFLAGS += --gap-fill=0xff
 
+# cu570m
+LDSCRIPT_BOOTSTRAP := $(TOPDIR)/board/$(BOARDDIR)/u-boot-bootstrap.lds
+
 gccincdir := $(shell $(CC) -print-file-name=include)
 
 CPPFLAGS := $(DBGFLAGS) $(OPTFLAGS) $(RELFLAGS)		\
@@ -158,13 +169,46 @@ CPPFLAGS += -I$(TOPDIR)/include
 CPPFLAGS += -fno-builtin -ffreestanding -nostdinc 	\
 	-isystem $(gccincdir) -pipe $(PLATFORM_CPPFLAGS)
 
+# cu570m
+### R3B0RN $(R3B0RN_UBOOT_EXTRA_CPPFLAGS) ###
+CPPFLAGS += $(R3B0RN_UBOOT_EXTRA_CPPFLAGS)
+
 ifdef BUILD_TAG
 CFLAGS := $(CPPFLAGS) -Wall -Wstrict-prototypes \
 	-DBUILD_TAG='"$(BUILD_TAG)"'
 else
 CFLAGS := $(CPPFLAGS) -Wall -Wstrict-prototypes
+
+# cu570m start
+ifeq ($(COMPRESSED_UBOOT),1)
+CFLAGS += -DCOMPRESSED_UBOOT=1
 endif
 
+ifeq ($(BUILD_OPTIMIZED),y)
+### R3B0RN    -mips32r2    -mtune=mips32r2 => -mtune=34kc    ===> R3B0RN_UBOOT_EXTRA_MIPSFLAGS ###
+### R3B0RN -Os => -O ===> OPTFLAGS ###
+CFLAGS += -funit-at-a-time
+endif
+endif
+
+ifeq ($(BUILD_TYPE),jffs2)
+CFLAGS += -DROOTFS=1
+else
+ifeq ($(BUILD_TYPE),squashfs)
+CFLAGS += -DROOTFS=2
+endif
+endif
+
+ifdef ATH_SST_FLASH
+CFLAGS += -DATH_SST_FLASH=1
+endif
+
+# which is used to load vxWorks.bin and run it for calibrate DUT
+ifeq ($(TPWD_FOR_LINUX_CAL),1)
+CFLAGS += -DTPWD_FOR_LINUX_CAL=1
+endif
+# cu570m end
+
 # avoid trigraph warnings while parsing pci.h (produced by NIOS gcc-2.9)
 # this option have to be placed behind -Wall -- that's why it is here
 ifeq ($(ARCH),nios)
@@ -186,11 +230,23 @@ endif
 
 AFLAGS := $(AFLAGS_DEBUG) -D__ASSEMBLY__ $(CPPFLAGS)
 
+# cu570m start
+ifeq ($(COMPRESSED_UBOOT),1)
+AFLAGS += -DCOMPRESSED_UBOOT=1
+endif
+# cu570m end
+
 LDFLAGS += -Bstatic -T $(LDSCRIPT) $(PLATFORM_LDFLAGS)
 ifneq ($(TEXT_BASE),)
 LDFLAGS += -Ttext $(TEXT_BASE)
 endif
 
+# cu570m start
+ifeq ($(COMPRESSED_UBOOT), 1)
+LDFLAGS_BOOTSTRAP += -Bstatic -T $(LDSCRIPT_BOOTSTRAP) -Ttext $(BOOTSTRAP_TEXT_BASE) $(PLATFORM_LDFLAGS)
+endif
+# cu570m end
+
 # Location of a usable BFD library, where we define "usable" as
 # "built for ${HOST}, supports ${TARGET}".  Sensible values are
 # - When cross-compiling: the root of the cross-environment
@@ -215,6 +271,10 @@ ifeq ($(PCI_CLOCK),PCI_66M)
 CFLAGS := $(CFLAGS) -DPCI_66M
 endif
 
+# cu570m
+### R3B0RN $(UBOOT_GCC_4_3_3_EXTRA_CFLAGS) => $(R3B0RN_UBOOT_EXTRA_MIPSFLAGS) ###
+CFLAGS += -g
+
 #########################################################################
 
 export	CONFIG_SHELL HPATH HOSTCC HOSTCFLAGS CROSS_COMPILE \
@@ -224,23 +284,58 @@ export	TEXT_BASE PLATFORM_CPPFLAGS PLATFORM_RELFLAGS CPPFLAGS CFLAGS AFLAGS
 
 #########################################################################
 
+# cu570m start
+# ifeq ($(V),1)
+#   Q =
+# else
+#   Q = @
+# endif
+#
+# export quiet Q V
+# cu570m end
+
+# CPP -> Q,CPP - cu570m start
 ifndef REMOTE_BUILD
 
 %.s:	%.S
+ifneq ($(V),1)
+	@echo [CPP] $(abspath $(CURDIR)/$<)
+endif
 	$(CPP) $(AFLAGS) -o $@ $<
+
 %.o:	%.S
+ifneq ($(V),1)
+	@echo [CC] $(abspath $(CURDIR)/$<)
+endif
 	$(CC) $(AFLAGS) -c -o $@ $<
+
 %.o:	%.c
+ifneq ($(V),1)
+	@echo [CC] $(abspath $(CURDIR)/$<)
+endif
 	$(CC) $(CFLAGS) -c -o $@ $<
 
 else
 
 $(obj)%.s:	%.S
+ifneq ($(V),1)
+	@echo [CPP] $(abspath $(CURDIR)/$<)
+endif
 	$(CPP) $(AFLAGS) -o $@ $<
+
 $(obj)%.o:	%.S
+ifneq ($(V),1)
+	@echo [CC] $(abspath $(CURDIR)/$<)
+endif
 	$(CC) $(AFLAGS) -c -o $@ $<
+
 $(obj)%.o:	%.c
+ifneq ($(V),1)
+	@echo [CC] $(abspath $(CURDIR)/$<)
+endif
 	$(CC) $(CFLAGS) -c -o $@ $<
+
 endif
+# CPP -> Q,CPP - cu570m end
 
 #########################################################################
diff --git a/mips_config.mk b/mips_config.mk
index d8aa5fa..9d7a109 100644
--- a/mips_config.mk
+++ b/mips_config.mk
@@ -22,6 +22,12 @@
 #
 
 PLATFORM_CPPFLAGS += -DCONFIG_MIPS -D__MIPS__
+
+# cu570m start
+ifeq ($(FLASH_TYPE),S25FL128P)
+   PLATFORM_CPPFLAGS += -D$(FLASH_TYPE)
+endif
+# cu570m end
 
 #
 # From Linux arch/mips/Makefile
-- 
2.17.1

